@model DriverInformation.ViewModel.DriverInfoModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="container">
    <div class="row">
        <div class="mx-auto col-10 col-md-8 col-lg-6">

            @using (Html.BeginForm("Create", "Driver", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.DriverId)
                <p><span>@Html.ActionLink(" Go Back", "Index", null, new { @class = " btn btn-secondary " })</span></p>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GenderId, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.GenderId, new SelectList(Model.GenList, "ID", "Text"), "Select Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Hobby, "Select Hobbies", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @for (var i = 0; i < Model.HobList.Count(); i++)
                        {
                            <span class="m-2">
                                @Html.HiddenFor(model => model.DriverId)
                                @Html.HiddenFor(item => item.HobList[i].HobbyId)
                                @Html.HiddenFor(item => item.HobList[i].Hobby)
                                @Html.DisplayFor(item => item.HobList[i].Hobby)
                                @Html.CheckBoxFor(item => item.HobList[i].IsActive, new { @class = "form-check-input text-bg-secondary" })
                            </span>

                        }

                        @Html.ValidationMessageFor(model => model.Hobby, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                //------CheckBoxes-------
                <div class="form-group">
                    @Html.LabelFor(model => model.Hobby, "Select Hobbies", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Football)
                            @Html.CheckBoxFor(model => model.Football, new { @class = "form-check-input text-bg-secondary" })
                        </span>
                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Basketball)
                            @Html.CheckBoxFor(model => model.Basketball, new { @class = "form-check-input text-bg-secondary" })
                        </span>
                        <br />
                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Cricket)
                            @Html.CheckBoxFor(model => model.Cricket, new { @class = "form-check-input text-bg-secondary" })
                        </span>
                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Singing)
                            @Html.CheckBoxFor(model => model.Singing, new { @class = "form-check-input text-bg-secondary" })
                        </span>
                        <br />
                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Dancing)
                            @Html.CheckBoxFor(model => model.Dancing, new { @class = "form-check-input text-bg-secondary" })
                        </span>

                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Reading)
                            @Html.CheckBoxFor(model => model.Reading, new { @class = "form-check-input text-bg-secondary" })
                        </span>
                        <br />
                        <span class="m-4">
                            @Html.HiddenFor(model => model.DriverId)
                            @Html.DisplayNameFor(model => model.Travelling)
                            @Html.CheckBoxFor(model => model.Travelling, new { @class = "form-check-input text-bg-secondary" })
                        </span>

                        @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActiveId, "Is Active?", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @*@Html.RadioButtonFor(model => model.ActiveId, new SelectList(Model.ActList, "ID", "Text"), new { @class = "form-control" })*@
                        @foreach (var item in Model.ActList)
                        {
                            @Html.RadioButtonFor(model => model.ActiveId, item.ID, new { @class = "form-check-input" }) @item.TEXT
                        }

                        @Html.ValidationMessageFor(model => model.ActiveId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ImageFilePath, "Upload Images:", htmlAttributes: new { @class = "control-label " })
                        <input type="file" name="fileImg" id="fileImg" accept="image/*" multiple required />
                        @ViewBag.Message

                        @Html.ValidationSummary()

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.ImageFilePath, "Upload Files:", htmlAttributes: new { @class = "control-label " })
                        <input type="file" name="files" id="files" accept=".pdf " multiple required />
                        @ViewBag.Message
                        @Html.ValidationSummary()

                        <br><br>
                    </div>
                </div>*@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-4">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>

                </div>
            }
        </div>
    </div>
    <hr />
</div>
